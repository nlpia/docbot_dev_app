version: '2.1'
services:
  db:
    image: "postgres:11.3-alpine"
    restart: always
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
     - ./db/.pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: echo 'SELECT 1' | PGPASSWORD=$POSTGRES_PASSWORD psql --host $$HOSTNAME --user $POSTGRES_USER $POSTGRES_DB
      interval: 1m
      timeout: 10s
      retries: 3

  redis:
    image: "redis:5.0.5-alpine"
    restart: always
    healthcheck:
      test: redis-cli PING || exit 1
      interval: 1m
      timeout: 10s
      retries: 3

  app:
    build: ./app
    restart: always
    ports:
     - "8000:8000"
    depends_on:
     - db
     - redis
     - migrate
    environment:
      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_URL: $REDIS_URL
    volumes:
     - ./app:/app
    healthcheck:
      test: curl --fail http://localhost:8000/?healthcheck || exit 1
      interval: 1m
      timeout: 10s
      retries: 3

  migrate:
    image: "docbot_dev_app"
    command: sh entrypoints/migrate.sh
    restart: on-failure
    # container_name prevents scaling the migrate container beyond 1
    container_name: ${COMPOSE_PROJECT_NAME}_migrate
    environment:
      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_URL: $REDIS_URL

  celery:
    image: "docbot_dev_app"
    command: sh entrypoints/runcelery.sh
    restart: on-failure
    depends_on:
     - app
    environment:
      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_URL: $REDIS_URL
    volumes:
     - ./app:/app
    healthcheck:
      test: celery -A docbot.celery inspect ping -d celery@celery || exit 1
      interval: 1m
      timeout: 10s
      retries: 3

  celerybeat:
    image: "docbot_dev_app"
    command: sh entrypoints/runcelerybeat.sh
    restart: on-failure
    depends_on:
     - celery
    environment:
      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_URL: $REDIS_URL
    volumes:
     - ./app:/app
    healthcheck:
      test: kill -0 $$(cat celerybeat.pid) || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
